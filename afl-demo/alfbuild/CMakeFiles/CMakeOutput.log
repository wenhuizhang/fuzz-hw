The system is: Linux - 5.8.0-36-generic - x86_64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: /usr/local/bin/afl-gcc 
Build flags: 
Id flags:  

The output was:
0


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"

The C compiler identification is GNU, found in "/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/3.16.3/CompilerIdC/a.out"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: /usr/local/bin/afl-g++ 
Build flags: 
Id flags:  

The output was:
0


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"

The CXX compiler identification is GNU, found in "/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/3.16.3/CompilerIdCXX/a.out"

Determining if the C compiler works passed with the following output:
Change Dir: /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_1167a/fast && /usr/bin/make -f CMakeFiles/cmTC_1167a.dir/build.make CMakeFiles/cmTC_1167a.dir/build
make[1]: Entering directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_1167a.dir/testCCompiler.c.o
/usr/local/bin/afl-gcc    -o CMakeFiles/cmTC_1167a.dir/testCCompiler.c.o   -c /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp/testCCompiler.c
Linking C executable cmTC_1167a
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1167a.dir/link.txt --verbose=1
/usr/local/bin/afl-gcc      CMakeFiles/cmTC_1167a.dir/testCCompiler.c.o  -o cmTC_1167a 
make[1]: Leaving directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'



Detecting C compiler ABI info compiled with the following output:
Change Dir: /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_43b21/fast && /usr/bin/make -f CMakeFiles/cmTC_43b21.dir/build.make CMakeFiles/cmTC_43b21.dir/build
make[1]: Entering directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o
/usr/local/bin/afl-gcc   -v -o CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
Using built-in specs.
COLLECT_GCC=gcc
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu -D __AFL_HAVE_MANUAL_CONTROL=1 -D __AFL_COMPILER=1 -D FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1 -D __AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt; -D __AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off(); -D __AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1; -D __AFL_COVERAGE_ON()=__afl_coverage_on() -D __AFL_COVERAGE_OFF()=__afl_coverage_off() -D __AFL_COVERAGE_DISCARD()=__afl_coverage_discard() -D __AFL_COVERAGE_SKIP()=__afl_coverage_skip() -D __AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr) -D __AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len) -D __AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); }) -D __AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0) /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o -g -O3 -version -funroll-loops -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccXIX2N2.s
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-mtune=generic' '-march=x86-64'
 /usr/local/bin/../lib/afl/as -v --64 -o CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o /tmp/ccXIX2N2.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-mtune=generic' '-march=x86-64'
Linking C executable cmTC_43b21
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_43b21.dir/link.txt --verbose=1
/usr/local/bin/afl-gcc     -v CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o  -o cmTC_43b21 
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'cmTC_43b21' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/ccldKAvz.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_43b21 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/local/bin/../lib/afl -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'cmTC_43b21' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;void __afl_coverage_discard();void __afl_coverage_skip();void __afl_coverage_on();void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'



Parsed C implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==> [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==> [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==> [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==> [/usr/include]
  implicit include dirs: [/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed C implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make cmTC_43b21/fast && /usr/bin/make -f CMakeFiles/cmTC_43b21.dir/build.make CMakeFiles/cmTC_43b21.dir/build]
  ignore line: [make[1]: Entering directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp']
  ignore line: [Building C object CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o]
  ignore line: [/usr/local/bin/afl-gcc   -v -o CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=gcc]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [void __afl_coverage_discard()]
  ignore line: [void __afl_coverage_skip()]
  ignore line: [void __afl_coverage_on()]
  ignore line: [void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1 -quiet -v -imultiarch x86_64-linux-gnu -D __AFL_HAVE_MANUAL_CONTROL=1 -D __AFL_COMPILER=1 -D FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1 -D __AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [ -D __AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [void __afl_coverage_discard()]
  ignore line: [void __afl_coverage_skip()]
  ignore line: [void __afl_coverage_on()]
  ignore line: [void __afl_coverage_off()]
  ignore line: [ -D __AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [ -D __AFL_COVERAGE_ON()=__afl_coverage_on() -D __AFL_COVERAGE_OFF()=__afl_coverage_off() -D __AFL_COVERAGE_DISCARD()=__afl_coverage_discard() -D __AFL_COVERAGE_SKIP()=__afl_coverage_skip() -D __AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr) -D __AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len) -D __AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ }) -D __AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0) /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o -g -O3 -version -funroll-loops -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccXIX2N2.s]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include <...> search starts here:]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C17 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: bbf13931d8de1abe14040c9909cb6969]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [void __afl_coverage_discard()]
  ignore line: [void __afl_coverage_skip()]
  ignore line: [void __afl_coverage_on()]
  ignore line: [void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/local/bin/../lib/afl/as -v --64 -o CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o /tmp/ccXIX2N2.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [void __afl_coverage_discard()]
  ignore line: [void __afl_coverage_skip()]
  ignore line: [void __afl_coverage_on()]
  ignore line: [void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking C executable cmTC_43b21]
  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_43b21.dir/link.txt --verbose=1]
  ignore line: [/usr/local/bin/afl-gcc     -v CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o  -o cmTC_43b21 ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=gcc]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'cmTC_43b21' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [void __afl_coverage_discard()]
  ignore line: [void __afl_coverage_skip()]
  ignore line: [void __afl_coverage_on()]
  ignore line: [void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/ccldKAvz.res -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lgcc_s --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_43b21 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/local/bin/../lib/afl -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o -lgcc --push-state --as-needed -lgcc_s --pop-state -lc -lgcc --push-state --as-needed -lgcc_s --pop-state /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==> ignore
    arg [-plugin] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==> ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==> ignore
    arg [-plugin-opt=-fresolution=/tmp/ccldKAvz.res] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [-plugin-opt=-pass-through=-lc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [--build-id] ==> ignore
    arg [--eh-frame-hdr] ==> ignore
    arg [-m] ==> ignore
    arg [elf_x86_64] ==> ignore
    arg [--hash-style=gnu] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-dynamic-linker] ==> ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
    arg [-pie] ==> ignore
    arg [-znow] ==> ignore
    arg [-zrelro] ==> ignore
    arg [-o] ==> ignore
    arg [cmTC_43b21] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==> ignore
    arg [-L/usr/local/bin/../lib/afl] ==> dir [/usr/local/bin/../lib/afl]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==> dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_43b21.dir/CMakeCCompilerABI.c.o] ==> ignore
    arg [-lgcc] ==> lib [gcc]
    arg [--push-state] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--pop-state] ==> ignore
    arg [-lc] ==> lib [c]
    arg [-lgcc] ==> lib [gcc]
    arg [--push-state] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [--pop-state] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
  collapse library dir [/usr/local/bin/../lib/afl] ==> [/usr/local/lib/afl]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==> [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==> [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> [/usr/lib]
  implicit libs: [gcc;gcc_s;c;gcc;gcc_s]
  implicit dirs: [/usr/local/lib/afl;/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


Determining if the CXX compiler works passed with the following output:
Change Dir: /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c40b7/fast && /usr/bin/make -f CMakeFiles/cmTC_c40b7.dir/build.make CMakeFiles/cmTC_c40b7.dir/build
make[1]: Entering directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_c40b7.dir/testCXXCompiler.cxx.o
/usr/local/bin/afl-g++    -std=gnu++14 -o CMakeFiles/cmTC_c40b7.dir/testCXXCompiler.cxx.o -c /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp/testCXXCompiler.cxx
Linking CXX executable cmTC_c40b7
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c40b7.dir/link.txt --verbose=1
/usr/local/bin/afl-g++       CMakeFiles/cmTC_c40b7.dir/testCXXCompiler.cxx.o  -o cmTC_c40b7 
make[1]: Leaving directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_72458/fast && /usr/bin/make -f CMakeFiles/cmTC_72458.dir/build.make CMakeFiles/cmTC_72458.dir/build
make[1]: Entering directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o
/usr/local/bin/afl-g++    -v -std=gnu++14 -o CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp
Using built-in specs.
COLLECT_GCC=g++
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-std=gnu++14' '-o' 'CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;extern "C" void __afl_coverage_discard();extern "C" void __afl_coverage_skip();extern "C" void __afl_coverage_on();extern "C" void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE -D __AFL_HAVE_MANUAL_CONTROL=1 -D __AFL_COMPILER=1 -D FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1 -D __AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt; -D __AFL_COVERAGE()=int __afl_selective_coverage = 1;extern "C" void __afl_coverage_discard();extern "C" void __afl_coverage_skip();extern "C" void __afl_coverage_on();extern "C" void __afl_coverage_off(); -D __AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1; -D __AFL_COVERAGE_ON()=__afl_coverage_on() -D __AFL_COVERAGE_OFF()=__afl_coverage_off() -D __AFL_COVERAGE_DISCARD()=__afl_coverage_discard() -D __AFL_COVERAGE_SKIP()=__afl_coverage_skip() -D __AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr) -D __AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len) -D __AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); }) -D __AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0) /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o -g -O3 -std=gnu++14 -version -funroll-loops -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccS5dRZa.s
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/include/c++/9
 /usr/include/x86_64-linux-gnu/c++/9
 /usr/include/c++/9/backward
 /usr/lib/gcc/x86_64-linux-gnu/9/include
 /usr/local/include
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)
	compiled by GNU C version 9.3.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl version isl-0.22.1-GMP

GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-std=gnu++14' '-o' 'CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;extern "C" void __afl_coverage_discard();extern "C" void __afl_coverage_skip();extern "C" void __afl_coverage_on();extern "C" void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/local/bin/../lib/afl/as -v --64 -o CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccS5dRZa.s
GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34
COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-std=gnu++14' '-o' 'CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;extern "C" void __afl_coverage_discard();extern "C" void __afl_coverage_skip();extern "C" void __afl_coverage_on();extern "C" void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
Linking CXX executable cmTC_72458
/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_72458.dir/link.txt --verbose=1
/usr/local/bin/afl-g++      -v CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_72458 
Using built-in specs.
COLLECT_GCC=g++
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none:hsa
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++,gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr,hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) 
COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/
LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'cmTC_72458' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;extern "C" void __afl_coverage_discard();extern "C" void __afl_coverage_skip();extern "C" void __afl_coverage_on();extern "C" void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cc287ezF.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_72458 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/local/bin/../lib/afl -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o
COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'cmTC_72458' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1;extern unsigned int *__afl_fuzz_len;extern unsigned char *__afl_fuzz_ptr;unsigned char __afl_fuzz_alt[1048576];unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt;' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1;extern "C" void __afl_coverage_discard();extern "C" void __afl_coverage_skip();extern "C" void __afl_coverage_on();extern "C" void __afl_coverage_off();' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1;' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0, __afl_fuzz_alt_ptr, 1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used));  _B = (char*)"##SIG_AFL_PERSISTENT##"; __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop"); _L(_A); })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used));  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"; __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init"); _I(); } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64'
make[1]: Leaving directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp'



Parsed CXX implicit include dir info from above output: rv=done
  found start of include info
  found start of implicit include info
    add: [/usr/include/c++/9]
    add: [/usr/include/x86_64-linux-gnu/c++/9]
    add: [/usr/include/c++/9/backward]
    add: [/usr/lib/gcc/x86_64-linux-gnu/9/include]
    add: [/usr/local/include]
    add: [/usr/include/x86_64-linux-gnu]
    add: [/usr/include]
  end of search list found
  collapse include dir [/usr/include/c++/9] ==> [/usr/include/c++/9]
  collapse include dir [/usr/include/x86_64-linux-gnu/c++/9] ==> [/usr/include/x86_64-linux-gnu/c++/9]
  collapse include dir [/usr/include/c++/9/backward] ==> [/usr/include/c++/9/backward]
  collapse include dir [/usr/lib/gcc/x86_64-linux-gnu/9/include] ==> [/usr/lib/gcc/x86_64-linux-gnu/9/include]
  collapse include dir [/usr/local/include] ==> [/usr/local/include]
  collapse include dir [/usr/include/x86_64-linux-gnu] ==> [/usr/include/x86_64-linux-gnu]
  collapse include dir [/usr/include] ==> [/usr/include]
  implicit include dirs: [/usr/include/c++/9;/usr/include/x86_64-linux-gnu/c++/9;/usr/include/c++/9/backward;/usr/lib/gcc/x86_64-linux-gnu/9/include;/usr/local/include;/usr/include/x86_64-linux-gnu;/usr/include]


Parsed CXX implicit link information from above output:
  link line regex: [^( *|.*[/\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
  ignore line: [Change Dir: /home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp]
  ignore line: []
  ignore line: [Run Build Command(s):/usr/bin/make cmTC_72458/fast && /usr/bin/make -f CMakeFiles/cmTC_72458.dir/build.make CMakeFiles/cmTC_72458.dir/build]
  ignore line: [make[1]: Entering directory '/home/wenhui/Downloads/afl-demo/alfbuild/CMakeFiles/CMakeTmp']
  ignore line: [Building CXX object CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o]
  ignore line: [/usr/local/bin/afl-g++    -v -std=gnu++14 -o CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=g++]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-std=gnu++14' '-o' 'CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [extern "C" void __afl_coverage_discard()]
  ignore line: [extern "C" void __afl_coverage_skip()]
  ignore line: [extern "C" void __afl_coverage_on()]
  ignore line: [extern "C" void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/cc1plus -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE -D __AFL_HAVE_MANUAL_CONTROL=1 -D __AFL_COMPILER=1 -D FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1 -D __AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [ -D __AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [extern "C" void __afl_coverage_discard()]
  ignore line: [extern "C" void __afl_coverage_skip()]
  ignore line: [extern "C" void __afl_coverage_on()]
  ignore line: [extern "C" void __afl_coverage_off()]
  ignore line: [ -D __AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [ -D __AFL_COVERAGE_ON()=__afl_coverage_on() -D __AFL_COVERAGE_OFF()=__afl_coverage_off() -D __AFL_COVERAGE_DISCARD()=__afl_coverage_discard() -D __AFL_COVERAGE_SKIP()=__afl_coverage_skip() -D __AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr) -D __AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len) -D __AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ }) -D __AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0) /usr/share/cmake-3.16/Modules/CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o -g -O3 -std=gnu++14 -version -funroll-loops -fasynchronous-unwind-tables -fstack-protector-strong -Wformat -Wformat-security -fstack-clash-protection -fcf-protection -o /tmp/ccS5dRZa.s]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/9"]
  ignore line: [ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/include-fixed"]
  ignore line: [ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/9/../../../../x86_64-linux-gnu/include"]
  ignore line: [#include "..." search starts here:]
  ignore line: [#include <...> search starts here:]
  ignore line: [ /usr/include/c++/9]
  ignore line: [ /usr/include/x86_64-linux-gnu/c++/9]
  ignore line: [ /usr/include/c++/9/backward]
  ignore line: [ /usr/lib/gcc/x86_64-linux-gnu/9/include]
  ignore line: [ /usr/local/include]
  ignore line: [ /usr/include/x86_64-linux-gnu]
  ignore line: [ /usr/include]
  ignore line: [End of search list.]
  ignore line: [GNU C++14 (Ubuntu 9.3.0-17ubuntu1~20.04) version 9.3.0 (x86_64-linux-gnu)]
  ignore line: [	compiled by GNU C version 9.3.0  GMP version 6.2.0  MPFR version 4.0.2  MPC version 1.1.0  isl version isl-0.22.1-GMP]
  ignore line: []
  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
  ignore line: [Compiler executable checksum: 466f818abe2f30ba03783f22bd12d815]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-std=gnu++14' '-o' 'CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [extern "C" void __afl_coverage_discard()]
  ignore line: [extern "C" void __afl_coverage_skip()]
  ignore line: [extern "C" void __afl_coverage_on()]
  ignore line: [extern "C" void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [ /usr/local/bin/../lib/afl/as -v --64 -o CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o /tmp/ccS5dRZa.s]
  ignore line: [GNU assembler version 2.34 (x86_64-linux-gnu) using BFD version (GNU Binutils for Ubuntu) 2.34]
  ignore line: [COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-std=gnu++14' '-o' 'CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o' '-c' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [extern "C" void __afl_coverage_discard()]
  ignore line: [extern "C" void __afl_coverage_skip()]
  ignore line: [extern "C" void __afl_coverage_on()]
  ignore line: [extern "C" void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  ignore line: [Linking CXX executable cmTC_72458]
  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_72458.dir/link.txt --verbose=1]
  ignore line: [/usr/local/bin/afl-g++      -v CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_72458 ]
  ignore line: [Using built-in specs.]
  ignore line: [COLLECT_GCC=g++]
  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper]
  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none:hsa]
  ignore line: [OFFLOAD_TARGET_DEFAULT=1]
  ignore line: [Target: x86_64-linux-gnu]
  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 9.3.0-17ubuntu1~20.04' --with-bugurl=file:///usr/share/doc/gcc-9/README.Bugs --enable-languages=c ada c++ go brig d fortran objc obj-c++ gm2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-9 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32 m64 mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none=/build/gcc-9-HskZEa/gcc-9-9.3.0/debian/tmp-nvptx/usr hsa --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]
  ignore line: [Thread model: posix]
  ignore line: [gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ]
  ignore line: [COMPILER_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/]
  ignore line: [LIBRARY_PATH=/usr/local/bin/../lib/afl/:/usr/lib/gcc/x86_64-linux-gnu/9/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/9/../../../:/lib/:/usr/lib/]
  ignore line: [COLLECT_GCC_OPTIONS='-B' '/usr/local/bin/../lib/afl' '-v' '-o' 'cmTC_72458' '-g' '-O3' '-funroll-loops' '-D' '__AFL_HAVE_MANUAL_CONTROL=1' '-D' '__AFL_COMPILER=1' '-D' 'FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION=1' '-D' '__AFL_FUZZ_INIT()=int __afl_sharedmem_fuzzing = 1]
  ignore line: [extern unsigned int *__afl_fuzz_len]
  ignore line: [extern unsigned char *__afl_fuzz_ptr]
  ignore line: [unsigned char __afl_fuzz_alt[1048576]]
  ignore line: [unsigned char *__afl_fuzz_alt_ptr = __afl_fuzz_alt]
  ignore line: [' '-D' '__AFL_COVERAGE()=int __afl_selective_coverage = 1]
  ignore line: [extern "C" void __afl_coverage_discard()]
  ignore line: [extern "C" void __afl_coverage_skip()]
  ignore line: [extern "C" void __afl_coverage_on()]
  ignore line: [extern "C" void __afl_coverage_off()]
  ignore line: [' '-D' '__AFL_COVERAGE_START_OFF()=int __afl_selective_coverage_start_off = 1]
  ignore line: [' '-D' '__AFL_COVERAGE_ON()=__afl_coverage_on()' '-D' '__AFL_COVERAGE_OFF()=__afl_coverage_off()' '-D' '__AFL_COVERAGE_DISCARD()=__afl_coverage_discard()' '-D' '__AFL_COVERAGE_SKIP()=__afl_coverage_skip()' '-D' '__AFL_FUZZ_TESTCASE_BUF=(__afl_fuzz_ptr ? __afl_fuzz_ptr : __afl_fuzz_alt_ptr)' '-D' '__AFL_FUZZ_TESTCASE_LEN=(__afl_fuzz_ptr ? *__afl_fuzz_len : (*__afl_fuzz_len = read(0  __afl_fuzz_alt_ptr  1048576)) == 0xffffffff ? 0 : *__afl_fuzz_len)' '-D' '__AFL_LOOP(_A)=({ static volatile char *_B __attribute__((used))]
  ignore line: [  _B = (char*)"##SIG_AFL_PERSISTENT##"]
  ignore line: [ __attribute__((visibility("default"))) int _L(unsigned int) __asm__("__afl_persistent_loop")]
  ignore line: [ _L(_A)]
  ignore line: [ })' '-D' '__AFL_INIT()=do { static volatile char *_A __attribute__((used))]
  ignore line: [  _A = (char*)"##SIG_AFL_DEFER_FORKSRV##"]
  ignore line: [ __attribute__((visibility("default"))) void _I(void) __asm__("__afl_manual_init")]
  ignore line: [ _I()]
  ignore line: [ } while (0)' '-shared-libgcc' '-mtune=generic' '-march=x86-64']
  link line: [ /usr/lib/gcc/x86_64-linux-gnu/9/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper -plugin-opt=-fresolution=/tmp/cc287ezF.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_72458 /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o -L/usr/local/bin/../lib/afl -L/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/9/../../.. CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/collect2] ==> ignore
    arg [-plugin] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/liblto_plugin.so] ==> ignore
    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/9/lto-wrapper] ==> ignore
    arg [-plugin-opt=-fresolution=/tmp/cc287ezF.res] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [-plugin-opt=-pass-through=-lc] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore
    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
    arg [--build-id] ==> ignore
    arg [--eh-frame-hdr] ==> ignore
    arg [-m] ==> ignore
    arg [elf_x86_64] ==> ignore
    arg [--hash-style=gnu] ==> ignore
    arg [--as-needed] ==> ignore
    arg [-dynamic-linker] ==> ignore
    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore
    arg [-pie] ==> ignore
    arg [-znow] ==> ignore
    arg [-zrelro] ==> ignore
    arg [-o] ==> ignore
    arg [cmTC_72458] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crti.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtbeginS.o] ==> ignore
    arg [-L/usr/local/bin/../lib/afl] ==> dir [/usr/local/bin/../lib/afl]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib]
    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]
    arg [-L/lib/../lib] ==> dir [/lib/../lib]
    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]
    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]
    arg [-L/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..]
    arg [CMakeFiles/cmTC_72458.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
    arg [-lstdc++] ==> lib [stdc++]
    arg [-lm] ==> lib [m]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [-lc] ==> lib [c]
    arg [-lgcc_s] ==> lib [gcc_s]
    arg [-lgcc] ==> lib [gcc]
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/crtendS.o] ==> ignore
    arg [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu/crtn.o] ==> ignore
  collapse library dir [/usr/local/bin/../lib/afl] ==> [/usr/local/lib/afl]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9] ==> [/usr/lib/gcc/x86_64-linux-gnu/9]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../../../lib] ==> [/usr/lib]
  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]
  collapse library dir [/lib/../lib] ==> [/lib]
  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]
  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]
  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/9/../../..] ==> [/usr/lib]
  implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]
  implicit dirs: [/usr/local/lib/afl;/usr/lib/gcc/x86_64-linux-gnu/9;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]
  implicit fwks: []


